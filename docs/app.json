[{"name":"app.R","content":"library(shiny)  # http://shiny.rstudio.com/\n\n# input .txt file w/common psychiatric medicaions on each line\nmedsPsych <- as.data.frame(read.table(file = \"medicationsPsychiatry.txt\", header = FALSE, sep = \"\\n\"))\nnames(medsPsych) <- \"meds\"\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"Medication Interactions\"),\n\n    # Sidebar \n    sidebarLayout(\n      \n      sidebarPanel(\n        \n        # input box to enter number of combinations\n        numericInput(\n          inputId = \"n_combo\",\n          label = \"Number of medications to combine\",\n          value = 2,\n          min = 2,\n          max = 10\n        ),\n        \n        # input box to enter medications\n        selectizeInput(\n          inputId = \"medicationsPsychiatry\",\n          label = \"Enter list of medications, separated by commas\",\n          choices = medsPsych$meds,\n          selected = NULL,\n          multiple = TRUE,\n          width = \"100%\",\n          options = list(\n            'plugins' = list('remove_button'),\n            'create' = TRUE,\n            'persist' = TRUE,\n          placeholder = \"e.g., abilify PO, haloperidol, quetiapine\"\n          )\n          ),\n        \n        # text to filter combinations by\n        textInput(\n          inputId = \"filter_med\",\n          label = \"Filter combinations by medicine\",\n          value = NULL,\n          placeholder = \"type the name of a single medicaiton (not case sensitive)\"\n        )\n      ),\n      \n      # main panel output\n      mainPanel(\n        \n        h2(\"Antipsychotic/Mood Stabilizer Polypharmacy Information Sheet\"),\n        p(\"Your treatment team may prescribe more than one medication at a time.\"),\n        \n        # h3(\"Why would I receive two similar types of medication?\"),\n        # p(\"1. Improve or optimize your treatment by using medications that work in different ways to treat the same condition. This can be a useful strategy if one medication used alone was not adequately treating your symptoms.\"),\n        # p(\"2. Your provider may be attempting to switch from one medication to another. In order to safely switch to another medication, they may have to slowly decrease the dose of one and increase the dose of another medication.\"),\n        # \n        # h3(\"What are the potential risks of taking two or more antipsychotic medications at the same time?\"),\n        # p(\"- Increased sedation: Taking two or more antipsychotics can increase the amount of tiredness that you are feeling.\"),\n        # p(\"- Lower seizure threshold: This combination of medication may possibly increase risk of seizures for patients who already have a seizure disorder.\"),\n        # p(\"- QT prolongation: This can occur when the heart muscle takes a longer time to contract than to relax. Taking two or more medications with this risk can lead to an abnormal heart rhythm. Report any chest pain or palpitations to your physician immediately.\"),\n        # p(\"- Extrapyramidal symptoms: This combination of medications may lead to increased risk of developing a movement disorder. Report any abnormal or uncontrolled movements to your prescriber.\"),\n        # p(\"- Peripheral edema: Depakote and risperidone (a type of antipsychotic) together can lead to swelling of the limbs. Contact your prescriber if you notice any swelling in your limbs.\"),\n        \n        h3(\"Possible medication combinations include:\"),\n        tableOutput(\"table\")\n        \n      )\n    )\n)\n\n# Define server logic required to create table of combinations\nserver <- function(input, output, session) {\n\n  # run each time a user changes text\n  output$table <- renderTable({\n \n    # source vector       \n    meds <- as.character(input$medicationsPsychiatry)\n    \n    # size of source vector\n    n <- length(meds)\n    \n    # size of target vectors\n    r <- input$n_combo\n\n    # string to filter medication names\n    filter_med1 <- stringr::str_to_lower(input$filter_med)\n    \n    # create combinations of all possible entries\n    tibble_combo <- tibble::as_tibble(\n      gtools::combinations(n=n, r=r, v = meds, set = TRUE, repeats.allowed = FALSE)\n    )\n    names(tibble_combo) <- paste(\"Medication\", 1:r)\n    \n    # if text is provided for filtering by medication...\n    if(!is.null(filter_med1)){\n      # ...then filter medicine by that medication\n      tibble_combo <- dplyr::filter(\n        .data = tibble_combo,\n        dplyr::if_any(.cols = dplyr::everything(), .fns = ~ grepl(filter_med1, .))\n      )\n    }\n    \n    # format table for document\n    tibble_out <- dplyr::mutate(\n      # combine multiple medications into single column\n      tidyr::unite(\n        data = tibble_combo, \n        col = med_combo, sep = \" + \"\n      ), \n      # capitalize first letter of each line\n      med_combo = gsub(\"^([a-z])\", \"\\\\U\\\\1\", med_combo, perl=TRUE)\n    )\n    \n    # final output\n    names(tibble_out) <- paste(\"Combinations of\", r, \"Medications\")\n    tibble_out\n    \n  })\n    \n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"app-render.R","content":"library(shinylive)\nshinylive::export(appdir = \".\", destdir = \"./docs\")\n","type":"text"},{"name":"medication-interactions.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"},{"name":"medicationsPsychiatry.txt","content":"haloperidol\nhaloperidol decanoate\naripiprazole PO\nclozapine\nfluphenazine\nolanzapine\nrisperidone\nquetiapine\naripiprazole IM (Abilify Maintena)\naripiprazole lauroxil\nfluphenazine decanoate\npaliperidone palmitate\nvalproate\nlithium\ncarbamazepine","type":"text"},{"name":"medicationsPsychiatrySahbS.txt","content":"aripiprazole 2 – 30 mg PO per day\nchlorpromazine 10 – 1200 mg PO or IM per day\nclozapine 25 – 800mg PO per day\nfluphenazine 5 – 40 mg PO per day\nhaloperidol 2.5 – 30mg PO or IM per day\nlurasidone 20 – 160mg PO per day\nolanzapine 2.5 – 40mg PO or IM per day\nrisperidone 1 – 8mg PO per day\npaliperidone 3 – 12mg PO per day\nquetiapine 25 – 1600 mg PO per day\nziprasidone 10 – 160 mg PO or 10 – 40mg IM per day\naripiprazole lauroxil (Abilify Aristada): initial load of 675mg (Aristada Initio) plus 441 – 1064 mg IM; with subsequent 441 – 1064mg IM  every 3 to 8 weeks\naripiprazole (Abilify Maintena) 300 – 400mg IM every month\nfluphenazine decanoate 12.5 mg – 50 mg IM every 1 to 3 weeks\nhaloperidol decanoate 50 – 200 mg IM every 2 to 4 weeks\npaliperidone palmitate (Invega Sustenna): initial load with 234mg IM on day 1, then 156mg IM 4 – 10 days later; followed by 78 – 234mg IM every 3 – 4 weeks\nrisperidone (Risperdal Consta) 12.5 – 50mg IM every 2 weeks\ncarbamazepine 100 – 600mg PO per day\nlamotrigine 25 – 400mg PO per day\nlithium carbonate PO 150 – 2400 mg per day\nvalproate (valproic acid, divalproex) 250 – 5000 mg PO or IV per day\npropranolol 10 – 120mg PO per day\nclonazepam 0.5 – 4mg PO per day\nlorazepam 0.5 – 30mg PO or IM per day","type":"text"},{"name":"test.R","content":"meds <- c(\"verapamil\", \"finasteride\", \"aspirin\", \"quetiapine\", \"tylenol\")\nn <- length(meds)\nr <- 2\nfilter_med1 <- NULL\n\n# create combinations of all possible entries\ntibble_combo <- tibble::as_tibble(\n  gtools::combinations(n=n, r=r, v = meds, set = TRUE, repeats.allowed = FALSE)\n)\nnames_meds_cols <- paste(\"Medication\", 1:r)\nnames(tibble_combo) <- names_meds_cols\n\n# if text is provided for filtering by medication\nif(!is.null(filter_med1)){\n  # then filter medicine by that medication\n  tibble_combo <- dplyr::filter(\n    .data = tibble_combo,\n    dplyr::if_any(.cols = dplyr::everything(), .fns = ~ grepl(filter_med1, .))\n    )\n}\n\ntibble_combo\n\n# format table for document\ntibble_out <- dplyr::mutate(\n  # combine multiple medications into single column\n  tidyr::unite(\n    data = tibble_combo, \n    col = med_combo, sep = \" + \"\n    ), \n  # capitalize first letter of each line\n  med_combo = gsub(\"^([a-z])\", \"\\\\U\\\\1\", med_combo, perl=TRUE)\n  )\n\ntibble_out\n","type":"text"}]
